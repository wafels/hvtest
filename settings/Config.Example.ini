;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Helioviewer.org Example Configuration   ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 
; This file contains basic configuration parameters used to control
; Helioviewer.org's behavior. Before Helioviewer.org can be used, this file
; must be copied or renamed to Config.ini and adjusted to reflect your system
; settings. Many of the parameters are described below. For a more detailed
; description of the entire installation process, see the installation
; documentation located on the Helioviewer Wiki:
; 
;   http://wiki.helioviewer.org/wiki/Installing_Helioviewer.org
;
; Questions/Comments?
;   contact@helioviewer.org
;
[version]
last_update = 2011/05/26
build_num   = 567

; Number of seconds the observation time will advance forward or move backward
; when the user steps through time.
default_timestep = 86400

; The amount of pixels outside the visible viewport which should be pre-fetched
; in order to speed up rendering. For example, to have Helioviewer.org download
; all tiles which are currently visible plus tiles which are just outside of the
; viewport, prefetch_size could be set to 512.
prefetch_size    = 0

[image_zoom_range]
; The default spatial scale, in arc-seconds per pixel, at 1 AU, for which images
; should be displayed. For optimal performance, it is best to pick a scale which
; is either equal to or a factor of two of the natural scale or one of your data
; sources. The default scale used in Helioviewer is based off AIA images:
;    default scale = aia_scale * 2^3 * (dsun_aia/1 au) 
;                  = 0.6 * 8 * (150872000000/149597870700)
; This will result in the default zoom level being an AIA image at 1/8 scale.
default_image_scale = 4.8408817358922471

; The minimum spatial scale (arc-seconds/pixel) for which an image should be
; displayed. This limits how much a user can zoom in to an image. The value
; chosen should be a factor of two of the default_image_scale, i.e.
; min_image_scale = default_image_scale * (2^n) for some integer value of n.
min_image_scale     = 0.60511021698653089

; The maximum spatial scale (arc-seconds/pixel) for which an image should be
; displayed. This limits how much a user can zoom out for an image. The value
; chosen should be a factor of two of the default_image_scale, i.e.
; min_image_scale = default_image_scale * (2^n) for some integer value of n.
max_image_scale     = 77.454107774275954

; The maximum number of tile layers which may be displayed simultaneously.
max_tile_layers     = 5

[filepaths]
; The root directory where of your Helioviewer.org installation. This must be
; somewhere that Apache allows access to.
root_dir     = /var/www

; The root directory of your JPEG 2000 archive, if one is available.
jp2_dir      = /var/www/jp2/LATEST

[environmental_variables]
; Any environmental variables to be set before executing command-line calls to
; Kakadu or ImageMagick. For example, on some systems it may be necessary to
; set the LD_LIBRARY_PATH variable to point to the location of the Kakadu
; shared library.
;path_cmd = "export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib/kakadu;"
path_cmd = ""

[urls]
; The URL that corresponds with the root_dir specified above.
web_root_url     = http://localhost

; The URL that corresponds with the jp2_dir specified above.
jp2_root_url     = http://localhost/jp2/LATEST

; The root URL to your JPIP server if one is available.
jpip_root_url    = jpip://localhost:8090/LATEST

[remote_servers]
; Whether or not multiple Dynamo servers should be used. The default behavior
; is to handle all requests from the same server where the Helioviewer.org
; instance is running. To use more than one server to handle requests
; set this value to true and add URLs to the API for each server which should
; be used. Helioviewer.org currently distributes the work-load evently across
; all availalbe servers. Future versions will allow for a finer level of
; control over how the server should be chosen. 
distributed_mode_enabled = false

; An example of an remote tiling server URL.
server[] = http://helioviewer.org/api/index.php

[executables]
; Location of the kdu_merge binary to be used during JPX image generation.
kdu_merge_bin = /usr/local/bin/kdu_merge

; Location of the kdu_merge binary to be used during tile generation.
kdu_expand    = /usr/local/bin/kdu_expand

[image_params]
; The amount of bits per pixel which the resulting image should be stored at.
; Unless you know what you are doing and have a good reason (e.g. data that is
; at a higher quality) then you should probably leave this value alone.
bit_depth                = 8

; Note that this option does not work well with older versions of ImageMagick
; (versions < 6.5.1), and has been temporarily disabled until a safer solution
; has been found which will work with all versions.
num_colors               = 256

; The smallest width/height an event-based image can be, in pixels. This is used
; to ensure that events with very small bounding boxes get padded to these dimensions.
min_event_image_size     = 400

[jhelioviewer]
; The maximum frames allowed for a JPX image request. Requests which would go
; over this limit are automatically adjusted (sub-sampled) and a JPX file with
; this many or fewer frames is generated instead.
; Note that due to limitations relating to the length allowed for kdu_merge
; command-line arguments, values which are very large may not always work.
; Future versions of Helioviewer may include a work-around to this limitation,
; however, the limit currently allowed should probably be sufficient for most
; cases. 
max_jpx_frames = 1000

[helioqueuer]
; Whether or not Helioqueuer has been configured to work along-side of Dynamo.
; In order to optimally support on-demand movie requests and other intensive
; tasks, Helioqueuer should be installed.
helioqueuer_enabled = true

; Helioqueuer API base URL
helioqueuer_api_url = http://localhost:4567

[movie_params]
; FFmpeg location
ffmpeg = ffmpeg

; The maximum number of frames to allow for static movie (ogv, mp4, avi)
; generation.
max_movie_frames = 300

; Maximum number of threads FFmpeg is allowed to use during movie generation.
; No all video codecs have support for multi-threaded encoding, but two of
; the libraries used by Helioviewer.org (libx264 and libvpx) do support 
; parallelization. Note that while setting this value to '0' will cause
; libx264 to use all available CPU's, this does not work for libvpx and
; should therefor be avoided.
ffmpeg_max_threads = 2

; How long a movie should be in seconds
default_movie_playback_in_seconds = 20

; JSON Data feed of videos to be displayed in the user video gallery.
; If no URL is specified, local video feed will be used.
user_video_feed = ""

[statistics]
; Whether basic usage statistics should be collected by Helioviewer.org. 
; Currently the information collected is very basic and does not include
; information about the specifics of the query, but rather the type of
; query and when the query was made.
enable_statistics_collection = true

[extra]
; An optional Google Analytics Web Property ID. If set, the Google Analytics
; code will be included on the main page using the specified ID.
; See https://www.google.com/analytics for more information.
google_analytics_id = ""

[news]
; Main news page URL
news_url = http://blog.helioviewer.org/

; RSS/Atom News feed to display headlines from
news_feed_url = http://blog.helioviewer.org/feed/

[contact]
; Contact email address
contact_email = contact@helioviewer.org

[branding]
; Image that appears at the top-left corner of the homepage
main_logo = resources/images/logos/simple.png

; Image used for the about dialog
about_logo = resources/images/logos/about_white.png

; Image that appears at the top of the API documentation
api_logo = resources/images/about.png

[debug]
; Disables caching of tile and also front-end content (JavaScript and CSS)
disable_cache = false

; Whether or not Helioviewer.org should use compressed/minified JavaScript
; files. If true, Helioviewer will attempt to include a single optimized
; version (helioviewer.min.js) of all the custom JavaScript code instead
; including one file for each class, which will decrease loading time.
; Note that if you downloaded the Helioviewer code source directly using
; Bazaar, you will need to generate the optimized file(s) using the
; Apache Ant build script located in the scripts/ directory before they
; can be used.
compress_js  = true

; Whether or not Helioviewer.org should use compressed/minified CSS files.
compress_css = true
